@*@model IEnumerable<EmpApplication.Models.Employee>*@
@model EmpApplication.ViewModel.EmpViewModel

@{
    ViewBag.Title = "Index";
}


@Html.Partial("CreateEmp",Model.empSingle)
@Html.Partial("ListEmp",Model.empList)



@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.empSingle.EmpId)

    <div class="form-group">
        @Html.LabelFor(model => model.empSingle.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.empSingle.EmpName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.empSingle.EmpName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.empSingle.EmpEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.empSingle.EmpEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.empSingle.EmpEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.empSingle.EmpDept, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.empSingle.EmpDept, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.empSingle.EmpDept, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Insert" class="btn btn-default" />
        </div>
    </div>


}

<h2>Employee Listing</h2>

<table class="table table-bordered">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.empList.EmpName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.empList.EmpEmail) 
        </th>
        <th>
            @Html.DisplayNameFor(model => model.empList.EmpDept) 
        </th>
        <th>Action</th>
    </tr>
    @foreach (var item in Model.empList)
    {
        <tr>
            <td>@Html.DisplayFor(model => item.EmpId)</td>
            <td>
                @Html.DisplayFor(model => item.EmpName)
            </td>
            <td>
                @Html.DisplayFor(model => item.EmpEmail)
            </td>
            <td>
                @Html.DisplayFor(model => item.EmpDept)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EmpId }, new { @class = "btn btn-primary" }) /
                @Html.ActionLink("Delete", "Delete", new { id = item.EmpId }, new { @class = "btn btn-primary" })
            </td>

        </tr>
    }


</table>



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@